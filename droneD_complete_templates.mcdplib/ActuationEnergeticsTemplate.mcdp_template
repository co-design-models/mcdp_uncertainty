template [
  Battery: `BatteryInterface,
  Actuation: `ActuationInterface,
  PowerApprox: `PowerApprox
] mcdp {
  provides endurance     [s]
  provides extra_payload [kg]
  provides extra_power   [W]
  provides num_missions [dimensionless]
  provides velocity  [m/s]

  requires total_cost [$]

  battery = instance Battery
  actuation = instance Actuation

  total_power0 = power required by actuation + provided extra_power

  power_approx = instance PowerApprox
  total_power0 <= power provided by power_approx # double check
  total_power = power required by power_approx

  capacity provided by battery >= provided endurance * total_power

  total_mass_comp = (
      mass required by battery +
      actuator_mass required by actuation
      + provided extra_payload)

  gravity = 9.81 m/s^2
  weight = total_mass_comp * gravity

  requires total_mass = total_mass_comp

  lift provided by actuation >= weight
  velocity provided by actuation >= provided velocity

  labor_cost = (10 $) * (maintenance required by battery)

  required total_cost >= (
    cost required by actuation +
    cost required by battery +
    labor_cost)

  missions provided by battery >= provided num_missions
}
